# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

set $nsi --no-startup-id

# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!

set $mod Mod4

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:Ubuntu Nerd Font 8

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8

# Polkit
exec $nsi lxpolkit

# Start XDG autostart .desktop files using dex. See also
# https://wiki.archlinux.org/index.php/XDG_Autostart
exec $nsi dex-autostart --autostart --environment i3

# The combination of xss-lock, nm-applet and pactl is a popular choice, so
# they are included here as an example. Modify as you see fit.

# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
# screen before suspend. Use loginctl lock-session to lock your screen.
# exec $nsi xss-lock --transfer-sleep-lock -- i3lock --nofork

# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.
exec $nsi nm-applet

# Use pactl to adjust volume in PulseAudio.
set $refresh_i3status killall -SIGUSR1 i3status
bindsym XF86AudioRaiseVolume exec $nsi pactl set-sink-volume @DEFAULT_SINK@ +5% && $refresh_i3status
bindsym XF86AudioLowerVolume exec $nsi pactl set-sink-volume @DEFAULT_SINK@ -5% && $refresh_i3status
bindsym XF86AudioMute exec $nsi pactl set-sink-mute @DEFAULT_SINK@ toggle && $refresh_i3status
bindsym XF86AudioMicMute exec $nsi pactl set-source-mute @DEFAULT_SOURCE@ toggle && $refresh_i3status

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
bindsym $mod+Return exec $nsi kitty

# kill focused window
bindsym $mod+q kill

# start dmenu (a program launcher)
# bindsym $mod+d exec $nsi "dmenu_run -nf '#F8F8F2' -nb '#282A36' -sb '#6272A4' -sf '#F8F8F2' -fn 'monospace-10' -p 'dmenu:'"
# A more modern dmenu replacement is rofi:
bindcode $mod+40 exec $nsi "rofi -modi drun,run,filebrowser -show drun"
# There also is i3-dmenu-desktop which only displays applications shipping a
# .desktop file. It is a wrapper around dmenu, so you need that installed.
# bindcode $mod+40 exec $nsi i3-dmenu-desktop

# change focus
bindsym $mod+j focus left
bindsym $mod+k focus down
bindsym $mod+l focus up
bindsym $mod+semicolon focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+j move left
bindsym $mod+Shift+k move down
bindsym $mod+Shift+l move up
bindsym $mod+Shift+semicolon move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+h split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
# bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 " "
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "切 "
set $ws9 " "
set $ws10 " "

# switch to workspace
bindsym $mod+b workspace $ws1
bindsym $mod+2 workspace $ws2
bindsym $mod+3 workspace $ws3
bindsym $mod+4 workspace $ws4
bindsym $mod+5 workspace $ws5
bindsym $mod+6 workspace $ws6
bindsym $mod+7 workspace $ws7
bindsym $mod+c workspace $ws8
bindsym $mod+s workspace $ws9
bindsym $mod+t workspace $ws10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace $ws1
bindsym $mod+Shift+2 move container to workspace $ws2
bindsym $mod+Shift+3 move container to workspace $ws3
bindsym $mod+Shift+4 move container to workspace $ws4
bindsym $mod+Shift+5 move container to workspace $ws5
bindsym $mod+Shift+6 move container to workspace $ws6
bindsym $mod+Shift+7 move container to workspace $ws7
bindsym $mod+Shift+8 move container to workspace $ws8
bindsym $mod+Shift+9 move container to workspace $ws9
bindsym $mod+Shift+0 move container to workspace $ws10

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym j resize shrink width 2 px or 2 ppt
        bindsym k resize grow height 2 px or 2 ppt
        bindsym l resize shrink height 2 px or 2 ppt
        bindsym semicolon resize grow width 2 px or 2 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 2 px or 2 ppt
        bindsym Down resize grow height 2 px or 2 ppt
        bindsym Up resize shrink height 2 px or 2 ppt
        bindsym Right resize grow width 2 px or 2 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"

#FF5E8A
# class                 border  bground text    indicator child_border
client.focused          #FF5E8A #FF5E8A #F8F8F2 #FF5E8A   #FF5E8A
client.focused_inactive #44475A #44475A #F8F8F2 #44475A   #44475A
client.unfocused        #282A36 #282A36 #BFBFBF #282A36   #282A36
client.urgent           #44475A #FF5555 #F8F8F2 #FF5555   #FF5555
client.placeholder      #282A36 #282A36 #F8F8F2 #282A36   #282A36

client.background       #F8F8F2

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
# bar {
#   colors {
#     background #282A36
#     statusline #F8F8F2
#     separator  #44475A

#     focused_workspace  #44475A #44475A #F8F8F2
#     active_workspace   #282A36 #44475A #F8F8F2
#     inactive_workspace #282A36 #282A36 #BFBFBF
#     urgent_workspace   #FF5555 #FF5555 #F8F8F2
#     binding_mode       #FF5555 #FF5555 #F8F8F2
#   }
#   status_command i3status
# }

exec $nsi xdg-user-dirs-update

exec $nsi xrandr --output DP-0 --off --output DP-1 --off --output DP-2 --off --output DP-3 --off --output HDMI-0 --mode 1920x1080 --pos 2560x0 --rotate right --output DP-4 --primary --mode 2560x1440 --pos 0x0 --rotate normal --output DP-5 --off
exec $nsi redshift
exec $nsi ~/.fehbg

set $monitor_h DP-4
set $monitor_v HDMI-0

#Hide window title bar
for_window [class=".*"] border pixel 2

workspace $ws1 output $monitor_h
workspace $ws8 output $monitor_v
workspace $ws9 output $monitor_v
workspace $ws10 output $monitor_v

assign [class="firefox"] $ws1
for_window [class="TelegramDesktop"] move container to workspace $ws8
for_window [class="Spotify"] move container to workspace $ws9, fullscreen enable
assign [class="Code"] $ws10
assign [class="kitty"] $ws10

exec $nsi firefox
exec $nsi spotify
exec $nsi kitty
exec $nsi code
exec telegram-desktop
exec $nsi i3-msg workspace $ws10

exec_always $nsi picom
exec $nsi "setxkbmap -layout us,ru -option grp:caps_toggle"


exec_always $nsi $HOME/.config/polybar/launch.sh

gaps inner 15
gaps outer 0

# Only enable gaps on a workspace when there is at least one container
# smart_gaps on

# Only enable outer gaps when there is exactly one container
smart_gaps inverse_outer

hide_edge_borders smart

# Activate smart borders (always)
# smart_borders on

# Sreen brightness controls
bindsym XF86MonBrightnessUp exec $nsi "ddccontrol dev:/dev/i2c-6 -r 0x10 -W 5 && ddccontrol dev:/dev/i2c-5 -r 0x10 -W 5"
bindsym XF86MonBrightnessDown exec $nsi "ddccontrol dev:/dev/i2c-6 -r 0x10 -W -5 && ddccontrol dev:/dev/i2c-5 -r 0x10 -W -5"

# Media player controls
bindsym XF86AudioPlay exec $nsi playerctl play-pause
bindsym XF86AudioNext exec $nsi playerctl next
bindsym XF86AudioPrev exec $nsi playerctl previous

# Take a screenshot upon pressing $mod+x (select an area)
# bindsym --release $mod+x exec --no-startup-id import /tmp/latest-screenshot.png

## Clipboard Screenshots
bindsym $mod+59 exec --no-startup-id maim | xclip -selection clipboard -t image/png
bindsym $mod+60 exec --no-startup-id maim --window $(xdotool getactivewindow) | xclip -selection clipboard -t image/png
bindsym $mod+61 exec --no-startup-id maim --select | xclip -selection clipboard -t image/png

bindsym $mod+Shift+m move workspace to output next